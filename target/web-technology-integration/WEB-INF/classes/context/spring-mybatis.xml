<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
       default-lazy-init="false">

    <description>MyBatis配置，主要为了提供高效灵活的查询功能支持。http://mybatis.github.io/mybatis-3/zh/index.html</description>


    <!-- Multi-db vendor support -->
    <bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
        <property name="properties">
            <bean class="org.springframework.beans.factory.config.PropertiesFactoryBean">
                <property name="properties">
                    <props>
                        <prop key="SQL Server">sqlserver</prop>
                        <prop key="DB2">db2</prop>
                        <prop key="Oracle">oracle</prop>
                        <prop key="MySQL">mysql</prop>
                        <prop key="H2">h2</prop>
                    </props>
                </property>
            </bean>
        </property>
    </bean>

    <!-- APP数据源配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 框架限定MyBatis只做查询处理，默认访问读写分离只读从库 -->
        <property name="dataSource" ref="dataSourceSlave"/>
        <property name="databaseIdProvider" ref="databaseIdProvider"/>
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations">
            <list>
                <value>classpath*:com/rascal/**/entity/*Mapper.xml</value>
            </list>
        </property>
    </bean>


    <bean id="myBatisDao" class="com.rascal.core.dao.mybatis.MyBatisGenerialDaoImpl">
        <property name="sqlSession">
            <bean class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
                <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
            </bean>
        </property>
    </bean>

    <!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="lab.s2jh.**.dao,s2jh.biz.**.dao" />
        <property name="annotationClass" value="lab.s2jh.core.dao.mybatis.MyBatisRepository" />
    </bean>
    -->
</beans>